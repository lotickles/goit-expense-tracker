{"version":3,"file":"static/js/9.aab435eb.chunk.js","mappings":"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","sources":["components/doughnut/Doughnut.styled.jsx","components/doughnut/Doughnut.jsx","pages/MainTransactionsPage/MainTransactionsPage.styled.jsx","pages/MainTransactionsPage/MainTransactionsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  width: 335px;\n  height: 471px;\n  padding: 28px 22px 0 21px;\n  border-radius: 30px;\n  background: #171719;\n  color: rgba(250, 250, 250, 0.5);\n\n  @media only screen and ((min-width: 768px) and (max-width:1439.98px)) {\n    width: 704px;\n    height: 302px;\n    display: flex;\n    flex-direction: column;\n    gap: 37px;\n  }\n\n  @media only screen and (min-width: 1440px) {\n    width: 630px;\n    height: 302px;\n    display: flex;\n    flex-direction: column;\n    gap: 37px;\n    padding: 40px 40px 0 40px;\n  }\n`;\n\nexport const TitleStyled = styled.p`\n  margin-bottom: 55px;\n\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n\n  @media only screen and (min-width: 768px) {\n    color: rgba(250, 250, 250, 0.5);\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: normal;\n  }\n`;\n\nexport const MainWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 40px;\n  @media only screen and ((min-width: 768px) and (max-width:1439.98px)) {\n    flex-direction: row;\n  }\n  @media only screen and (min-width: 1440px) {\n    flex-direction: row;\n    gap: 40px;\n  }\n`;\n\nexport const DoughnutWrapper = styled.div`\n  width: 292px;\n  height: 142px;\n`;\n\nexport const ListWrapper = styled.div`\n  width: 292px;\n  max-height: 126px;\n\n  overflow-x: hidden;\n  overflow-y: auto;\n  scroll-behavior: smooth;\n  scrollbar-color: #444446 #0c0d0d;\n\n  & ::-webkit-scrollbar-thumb {\n    width: 6px;\n    height: 64px;\n    border-radius: 12px;\n    background-color: #0c0d0d;\n  }\n  & ::-webkit-scrollbar-track {\n    width: 6px;\n    height: 126px;\n    border-radius: 12px;\n    background-color: #444446;\n  }\n\n  @media only screen and (min-width: 1440px) {\n    width: 217px;\n  }\n`;\n\nexport const ListStyled = styled.ul`\n  width: 230px;\n  display: inline-flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 14px;\n  list-style-type: none;\n  padding-left: 20px;\n  padding-right: 20px;\n`;\n\nexport const ItemStyled = styled.li`\n  width: 269px;\n  display: flex;\n  align-items: center;\n  position: relative;\n  padding-left: 8px;\n\n  & ::before {\n    content: 'â€¢';\n    color: ${props => props.color || 'black'};\n    font-size: 30px;\n    position: absolute;\n    top: -10px;\n    left: -10px;\n  }\n\n  & p {\n    color: rgba(250, 250, 250, 0.5);\n    font-family: Suisse Intl;\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: normal;\n  }\n\n  & p:last-child {\n    margin-right: 20px;\n    margin-left: auto;\n    color: #fafafa;\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 700;\n    line-height: normal;\n  }\n\n  @media only screen and ((min-width: 768px) and (max-width:1439.98px)) {\n    width: 269px;\n  }\n\n  @media only screen and (min-width: 1440px) {\n    width: 191px;\n  }\n`;\n\nexport const StatisticsPlug = styled.p`\n  font-size: 16px;\n  margin-top: 140px;\n  text-align: center;\n\n  @media only screen and (min-width: 768px) {\n    font-size: 18px;\n    margin-top: 40px;\n  }\n`;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { Doughnut } from \"react-chartjs-2\";\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from \"chart.js\";\n\nimport randomColor from \"randomcolor\";\n\nimport { selectTransaction } from \"../../redux/transactions/selectors\";\n// redux/transactions/selectors\nimport {\n  DoughnutWrapper,\n  ItemStyled,\n  ListStyled,\n  ListWrapper,\n  MainWrapper,\n  StatisticsPlug,\n  Wrapper,\n} from \"./Doughnut.styled\";\n\nChartJS.register(ArcElement, Tooltip, Legend);\n\nconst DoughnutComponent = () => {\n  const listRef = useRef(null);\n\n  const queryTransactions = useSelector(selectTransaction);\n  const dispatch = useDispatch();\n\n  const [allSums, setAllSums] = useState(0);\n  const [items, setItems] = useState(null);\n\n  const data = () => {\n    const newData = items?.map((item) => item.sum);\n    const segmentColors = items?.map(item => item.color);\n    return {\n      labels: [],\n      datasets: [\n        {\n          data: newData,\n          backgroundColor: segmentColors,\n          borderWidth: 0,\n        },\n      ],\n    };\n  };\n\n  useEffect(() => {\n    getCategoryesTransactions(queryTransactions);\n  }, [dispatch, queryTransactions]);\n\n  const chartOptions = {\n    hoverOffset: [20],\n    rotation: [-90],\n    circumference: [180],\n    maintainAspectRatio: false,\n    width: [280],\n    height: [140],\n  };\n\n  function getCategoryesTransactions(transactions) {\n    if (transactions) {\n      const categorySums = {};\n      transactions.forEach((item) => {\n        const categoryName = item.category?.categoryName;\n        if (categoryName) {\n          if (categorySums[categoryName]) {\n            categorySums[categoryName] += item.sum;\n          } else {\n            categorySums[categoryName] = item.sum;\n          }\n        }\n        const totalSum = transactions.reduce((acc, item) => acc + item.sum, 0);\n        const newItems = Object.keys(categorySums).map((categoryName) => ({\n          category: { categoryName },\n          sum: categorySums[categoryName],\n          percentage: ((categorySums[categoryName] / totalSum) * 100).toFixed(\n            2\n          ),\n          color: randomColor(),\n        }));\n        setItems(newItems);\n        setAllSums(totalSum);\n      });\n    }\n  }\n\n  const handleChartHover = (elements) => {\n    if (elements.length > 0) {\n      const clickedElement = elements[0];\n      const index = clickedElement.index;\n\n      if (listRef.current) {\n        const listItem = listRef.current.querySelector(`[data-id=\"${index}\"]`);\n\n        if (listItem) {\n          listItem.scrollIntoView({\n            behavior: \"smooth\",\n            block: \"center\",\n            inline: \"center\",\n          });\n        }\n      }\n    }\n  };\n\n  return (\n    <Wrapper>\n      <h2>Expenses categories</h2>\n      {!items?.length && (\n        <StatisticsPlug>\n          Add at least 1 expense to see \"doughnut\" chart hereðŸ“Š\n        </StatisticsPlug>\n      )}\n      <MainWrapper>\n        <DoughnutWrapper>\n          <Doughnut\n            data={data()}\n            options={{\n              ...chartOptions,\n              onHover: (_, elements) => handleChartHover(elements),\n            }}\n          />\n        </DoughnutWrapper>\n        <ListWrapper ref={listRef}>\n          <ListStyled>\n            {items?.map((transaction, index) => (\n              <ItemStyled\n                data-id={index}\n                key={index}\n                color={transaction.color}\n              >\n                <p>{transaction.category?.categoryName}</p>\n                <p>{`${((transaction.sum / allSums) * 100).toFixed(2)}%`}</p>\n              </ItemStyled>\n            ))}\n          </ListStyled>\n        </ListWrapper>\n      </MainWrapper>\n    </Wrapper>\n  );\n};\n\nexport default DoughnutComponent;\n","import styled from 'styled-components';\n\n// section\nexport const StyledSection = styled.section`\n  width: 375px;\n  padding-left: 20px;\n  padding-right: 20px;\n  padding-bottom: 80px;\n  margin-right: auto;\n  margin-left: auto;\n\n  margin-top: 66px;\n\n  @media only screen and ((min-width: 768px) and ( max-width: 1439.98px)) {\n    width: 768px;\n    padding-left: 32px;\n    padding-right: 32px;\n    padding-bottom: 80px;\n    margin-top: 59px;\n  }\n\n  @media only screen and (min-width: 1440px) {\n    width: 1440px;\n    padding-left: 100px;\n    padding-right: 100px;\n    padding-bottom: 50px;\n\n    display: flex;\n    gap: 44px;\n    margin-top: 59px;\n  }\n`;\n\n// headers\nexport const StyledHeadersWrapper = styled.div`\n  width: 335px;\n  margin-bottom: 40px;\n\n  @media only screen and ((min-width: 768px) and ( max-width: 1439.98px)) {\n    width: 500px;\n  }\n\n  @media only screen and (min-width: 1440px) {\n    width: 630px;\n  }\n`;\n\nexport const StyledHeaders = styled.h1`\n  margin-bottom: 20px;\n\n  color: #fafafa;\n  font-weight: 400;\n  font-size: 32px;\n  letter-spacing: -0.02em;\n  line-height: normal;\n\n  @media only screen and (min-width: 768px) {\n    margin-bottom: 15px;\n\n    font-size: 38px;\n  }\n`;\n\nexport const StyledText = styled.p`\n  color: rgba(250, 250, 250, 0.4);\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n  letter-spacing: -0.02em;\n\n  @media only screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n  @media only screen and (min-width: 1440px) {\n    width: 570px;\n  }\n`;\n\n// total expense & income\n\nexport const StyledTotalUl = styled.ul`\n  width: 335px;\n  padding: 0;\n\n  display: flex;\n  gap: 12px;\n  flex-direction: column;\n\n  list-style: none;\n\n  margin-bottom: 40px;\n\n  @media only screen and ((min-width: 768px) and ( max-width: 1439.98px)) {\n    width: 701px;\n\n    flex-direction: row;\n\n    gap: 0;\n    justify-content: space-between;\n  }\n\n  @media only screen and (min-width: 1440px) {\n    width: 630px;\n\n    gap: 24px;\n    flex-direction: row;\n  }\n`;\n\nexport const StyledMain = styled.main`\n  width: 630px;\n  width: 335px;\n\n  display: flex;\n  flex-direction: column;\n  gap: 40px;\n\n  @media only screen and (min-width: 1440px) {\n    flex-direction: row-reverse;\n    justify-content: flex-end;\n\n    gap: 0px;\n  }\n`;\n\nexport const StyledWrapper = styled.div`\n  width: 630px;\n`;\n","// base\nimport React, { useEffect } from \"react\";\nimport { useMediaQuery } from \"react-responsive\";\n\n// selectors\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectIsLoggedIn } from \"../../redux/auth/selectors\";\n// components\nimport { TotalIncome, TotalExpense } from \"../../shared/Total\";\nimport OperationForm from \"../../shared/OperationForm/OperationForm\";\nimport DoughnutComponent from \"../../components/doughnut/Doughnut\";\n\n// styled\nimport {\n  StyledHeaders,\n  StyledSection,\n  StyledText,\n  StyledHeadersWrapper,\n  StyledTotalUl,\n  StyledMain,\n  StyledWrapper,\n} from \"./MainTransactionsPage.styled\";\n\n// thunk's\nimport { getTransactionsThunk } from \"../../redux/transactions/operations\";\nimport { Navigate } from \"react-router-dom\";\nimport { FramerMotion } from \"../../helpers/framer-motion\";\n\nconst MainTransactionsPage = () => {\n  // adaptive design\n  const isNotDesktop = useMediaQuery({ query: \"(max-width: 1439.98px\" });\n  const isDesktop = useMediaQuery({ query: \"(min-width: 1440px)\" });\n\n  // dispatch to get all transactions\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (isLoggedIn) {\n      dispatch(getTransactionsThunk({ type: \"expenses\"}));\n    }\n  }, [dispatch, isLoggedIn]);\n\n  if (!isLoggedIn) {\n    return <Navigate to=\"/login\" />;\n  }\n\n  return (\n    <StyledSection>\n      {isNotDesktop && (\n        <>\n          <FramerMotion $variant=\"mainTransactionsHeaderNotDesktop\">\n            <StyledHeadersWrapper>\n              <StyledHeaders>Expense log</StyledHeaders>\n              <StyledText>\n                Capture and organize every penny spent with ease! A clear view\n                of your financial habits at your fingertips.\n              </StyledText>\n            </StyledHeadersWrapper>\n          </FramerMotion>\n          <FramerMotion $variant=\"mainTransactionsListNotDesktop\">\n            <StyledTotalUl>\n              <li>\n                <TotalIncome />\n              </li>\n              <li>\n                <TotalExpense />\n              </li>\n            </StyledTotalUl>\n          </FramerMotion>\n          <FramerMotion $variant=\"operationForm\">\n            <OperationForm editData={null} />\n          </FramerMotion>\n          <FramerMotion $variant=\"doughnut\">\n            <StyledMain>\n              <DoughnutComponent />\n            </StyledMain>\n          </FramerMotion>\n        </>\n      )}\n      {isDesktop && (\n        <>\n          <FramerMotion $variant=\"mainTransactionsInfoDesktop\">\n            <StyledWrapper>\n              <StyledHeadersWrapper>\n                <StyledHeaders>Expense log</StyledHeaders>\n                <StyledText>\n                  Capture and organize every penny spent with ease! A clear view\n                  of your financial habits at your fingertips.\n                </StyledText>\n              </StyledHeadersWrapper>\n              <StyledTotalUl>\n                <li>\n                  <TotalIncome />\n                </li>\n                <li>\n                  <TotalExpense />\n                </li>\n              </StyledTotalUl>\n              <StyledMain>\n                <DoughnutComponent />\n              </StyledMain>\n            </StyledWrapper>\n          </FramerMotion>\n          <FramerMotion $variant=\"operationForm\">\n            <OperationForm />\n          </FramerMotion>\n        </>\n      )}\n    </StyledSection>\n  );\n};\n\nexport default MainTransactionsPage;\n"],"names":["Wrapper","styled","div","MainWrapper","p","DoughnutWrapper","ListWrapper","ListStyled","ul","ItemStyled","li","props","color","StatisticsPlug","ChartJS","register","ArcElement","Tooltip","Legend","DoughnutComponent","listRef","useRef","queryTransactions","useSelector","selectTransaction","dispatch","useDispatch","allSums","setAllSums","useState","items","setItems","useEffect","transactions","categorySums","forEach","item","_item$category","categoryName","category","sum","totalSum","reduce","acc","newItems","Object","keys","map","percentage","toFixed","randomColor","getCategoryesTransactions","_jsxs","children","_jsx","length","Doughnut","data","labels","datasets","backgroundColor","borderWidth","options","hoverOffset","rotation","circumference","maintainAspectRatio","width","height","onHover","_","elements","index","current","listItem","querySelector","scrollIntoView","behavior","block","inline","handleChartHover","ref","transaction","_transaction$category","StyledSection","section","StyledHeadersWrapper","StyledHeaders","h1","StyledText","StyledTotalUl","StyledMain","main","StyledWrapper","MainTransactionsPage","isNotDesktop","useMediaQuery","query","isDesktop","isLoggedIn","selectIsLoggedIn","getTransactionsThunk","type","_Fragment","FramerMotion","$variant","TotalIncome","TotalExpense","OperationForm","editData","Navigate","to"],"sourceRoot":""}